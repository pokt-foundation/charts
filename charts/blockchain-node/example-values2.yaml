# Example values to show all the available options
# WIP
statefulset:
  - name: pokt  # <- STATEFULSET_NAME
    nodeSelector:
      node.kubernetes.io/instance-type: XXXXXXXX
    tolerations:
      - key: "example-key"
        operator: "Exists"
        effect: "NoSchedule"
    persistence:
      size: 500Gi
      storageClassName: XXXXX
      volumeMountPath: /home/app/.pocket

    initContainers:
      - name: download-genesis
        image: "alpine:latest"
        env:
          - name: GENESIS_FILE
            value: "/home/app/.pocket/config/genesis.json"
          - name: GENESIS_URL
            value: https://raw.githubusercontent.com/pokt-network/pocket-network-genesis/master/mainnet/genesis.json
        command:
          - 'sh'
          - '-c'
          - |
            mkdir -p $(dirname $GENESIS_FILE)
            wget $GENESIS_URL -O $GENESIS_FILE
        volumeMounts:
          - name: STATEFULSET_NAME-data
            mountPath: /home/app/.pocket
### Some useful init containers ##########################
      ### Download lates POKT data snapshot
      ### It takes 4-5 hours to download the snapshot
      # - name: download-data-snapshot
      #   image: alpine:latest
      #   env:
      #     - name: UPLINK_ACCESS_TOKEN
      #       value: "XXXXXXXXXXXXXXXXXXXXXXXX"
      #     - name: FLAG
      #       value: .../snapshot-extracted"
      #     - name: DATA_DIR
      #       value: ".../data"
      #     - name: UPLINK_RELEASE
      #       value: "https://github.com/storj/storj/releases/latest/download/uplink_linux_amd64.zip"
      #     - name: UPLINK
      #       value: "/tmp/uplink"
      #     - name: DATA_SNAPSHOT
      #       value: "https://snapshot.nodes.pokt.network/latest.tar.gz"
      #   workingDir: /path/to/workingdir
      #   command:
      #     - 'sh'
      #     - '-c'
      #     - |
      #       set -exu

      #       if [[ -f $FLAG ]]; then
      #         echo "Data already extracted. Skipping."
      #         echo "If you wish to re-download data, delete the file '$FLAG'"
      #       else
      #         wget $UPLINK_RELEASE -O $(dirname $UPLINK)/uplink_linux_amd64.zip
      #         unzip -o $(dirname $UPLINK)/uplink_linux_amd64.zip -d $(dirname $UPLINK)

      #         START_TIME="$(date +%s)"
      #         rm -rf $DATA_DIR
      #         mkdir -p $DATA_DIR
      #         cd $DATA_DIR
      #         SJ_FILENAME="$(wget --server-response --spider $DATA_SNAPSHOT 2>&1 | grep -iroh -m1 'location:[[:space:]]\+https\?://[a-zA-Z0-9~#%&_+=,.?/-]\+' | cut -d" " -f2 | rev | cut -d'/' -f1|rev|cut -d'?' -f1)"

      #         #Configuring UPLINK
      #         UPLINK_CONFIG_DIR="/tmp"
      #         echo -e "[metrics]\naddr =\n" > $UPLINK_CONFIG_DIR/config.ini
      #         $UPLINK --config-dir=$UPLINK_CONFIG_DIR access import main $UPLINK_ACCESS_TOKEN

      #         $UPLINK cp --config-dir=$UPLINK_CONFIG_DIR --parallelism 4 --parallelism-chunk-size 0 \
      #           --access main sj://pocket-public-blockchains/$SJ_FILENAME - | tar xvzf -
      #         echo "$SJ_FILENAME" > $FLAG

      #         rm $UPLINK $(dirname $UPLINK)/uplink_linux_amd64.zip
      #       fi
      #   volumeMounts:
      #     - name: STATEFULSET_NAME-data
      #       mountPath: /home/app/.pocket
###########################################
    containers:
      - name: pocket-core
        image:
          repository: poktnetwork/pocket
          tag: "latest"
        workingDir: /home/app/.pocket
        command: "pocket start \
          --datadir=/home/app/.pocket \
          --mainnet \
          --keybase=false"
        ports:
          - name: tendermint
            type: ClusterIP
            port: 26657
            protocol: TCP
            GCPHTTPSLoadBalancer: 
              domains:
                - seed10.mainnet.pokt.network
              annotations:
                external-dns.alpha.kubernetes.io/hostname: "seed10.mainnet.pokt.network"
              healthCheck:
                requestPath: /*
          - name: rpc
            type: ClusterIP
            port: 8081
            protocol: TCP
            GCPHTTPSLoadBalancer: 
              domains:
                - seed10.mainnet.pokt.network
              annotations:
                external-dns.alpha.kubernetes.io/hostname: "seed10.mainnet.pokt.network"
              healthCheck:
                requestPath: /*
          - name: tendermintpeers
            type: ClusterIP
            port: 26656
            protocol: TCP
          - name: monitoring
            type: ClusterIP
            port: 26660
            protocol: TCP
        mountSecrets:
          - name: seed10-keys
            targetPath: /home/app/.pocket
        mountConfigMaps:
          - name: config-dir-json
            targetPath: /home/app/.pocket/config
          # Separate CM to save it in different path
          - name: data-dir-json
            targetPath: /home/app/.pocket
        resources:
          limits:
            cpu: 8
            memory: 15Gi
          requests:
            cpu: 1
            memory: 4Gi
        healthProbes:
          portToMonitor: 8545
          env:
            SIDECAR_CHAIN_ID: "0001"
            HEIGHT_CHECK_STRATEGY: pocket
            REMOTE_RPC_ENDPOINTS: "https://mainnet-1-instance.nodes.pokt.network:4201"
            STARTUP_PROBE_STRATEGY: localRpcAvailable
            READINESS_PROBE_STRATEGY: localVsRemote
            LIVENESS_PROBE_STRATEGY: heightNotClimbing

# Additional manifests to deploy as an array
additionalManifests:
  - kind: SecretStore
    apiVersion: external-secrets.io/v1beta1
    metadata:
      name: vault-seed10
    spec:
      controller: ""
      provider:
        vault:
          auth:
            kubernetes:
              mountPath: k8s-node-infrastructure-ap-southeast-1
              role: seed10
              serviceAccountRef:
                name: seed10
          namespace: admin/engineering/
          path: devops/
          server: https://hcp-vault-cluster-a-public-vault-72230702.bb94b393.z1.hashicorp.cloud:8200
          version: "v1"
  - kind: ExternalSecret
    apiVersion: external-secrets.io/v1beta1
    metadata:
      name: seed10-keys
    spec:
      refreshInterval: "60s"
      secretStoreRef:
        name: vault-seed10
        kind: SecretStore
      target:
        name: seed10-keys
        deletionPolicy: "Delete"
      data:
        - secretKey: node_key.json
          remoteRef:
            key: seeds/seed10
            property: node_key.json
        - secretKey: priv_val_key.json
          remoteRef:
            key: seeds/seed10
            property: priv_val_key.json

  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: config-dir-json
    data:
      config.json: |
        {
            "tendermint_config": {
                "RootDir": "/home/app/.pocket",
                "ProxyApp": "tcp://127.0.0.1:26658",
                "Moniker": "pocket-core-seed10",
                "FastSyncMode": true,
                "DBBackend": "goleveldb",
                "LevelDBOptions": {
                    "block_cache_capacity": 83886,
                    "block_cache_evict_removed": false,
                    "block_size": 4096,
                    "disable_buffer_pool": true,
                    "open_files_cache_capacity": -1,
                    "write_buffer": 838860
                },
                "DBPath": "data",
                "LogLevel": "*:info, *:error",
                "LogFormat": "plain",
                "Genesis": "genesis.json",
                "PrivValidatorKey": "priv_val_key.json",
                "PrivValidatorState": "priv_val_state.json",
                "PrivValidatorListenAddr": "",
                "NodeKey": "node_key.json",
                "ABCI": "socket",
                "ProfListenAddress": "",
                "FilterPeers": false,
                "RPC": {
                    "RootDir": "/home/app/.pocket",
                    "ListenAddress": "tcp://0.0.0.0:26657",
                    "CORSAllowedOrigins": [],
                    "CORSAllowedMethods": [
                        "HEAD",
                        "GET",
                        "POST"
                    ],
                    "CORSAllowedHeaders": [
                        "Origin",
                        "Accept",
                        "Content-Type",
                        "X-Requested-With",
                        "X-Server-Time"
                    ],
                    "GRPCListenAddress": "",
                    "GRPCMaxOpenConnections": 2500,
                    "Unsafe": false,
                    "MaxOpenConnections": 2500,
                    "MaxSubscriptionClients": 100,
                    "MaxSubscriptionsPerClient": 5,
                    "TimeoutBroadcastTxCommit": 10000000000,
                    "MaxBodyBytes": 1000000,
                    "MaxHeaderBytes": 1048576,
                    "TLSCertFile": "",
                    "TLSKeyFile": ""
                },
                "P2P": {
                    "RootDir": "/home/app/.pocket",
                    "ListenAddress": "tcp://0.0.0.0:26656",
                    "ExternalAddress": "tcp://seed10.mainnet.pokt.network:29856",
                    "Seeds": "",
                    "PersistentPeers": "",
                    "UPNP": false,
                    "AddrBook": "addrbook.json",
                    "AddrBookStrict": false,
                    "MaxNumInboundPeers": 2000,
                    "MaxNumOutboundPeers": 2000,
                    "UnconditionalPeerIDs": "",
                    "PersistentPeersMaxDialPeriod": 0,
                    "FlushThrottleTimeout": 100000000,
                    "MaxPacketMsgPayloadSize": 1024,
                    "SendRate": 5120000,
                    "RecvRate": 5120000,
                    "PexReactor": true,
                    "SeedMode": true,
                    "PrivatePeerIDs": "",
                    "AllowDuplicateIP": true,
                    "HandshakeTimeout": 20000000000,
                    "DialTimeout": 3000000000,
                    "TestDialFail": false,
                    "TestFuzz": false,
                    "TestFuzzConfig": {
                        "Mode": 0,
                        "MaxDelay": 3000000000,
                        "ProbDropRW": 0.2,
                        "ProbDropConn": 0,
                        "ProbSleep": 0
                    }
                },
                "Mempool": {
                    "RootDir": "/home/app/.pocket",
                    "Recheck": true,
                    "Broadcast": true,
                    "WalPath": "",
                    "Size": 9000,
                    "MaxTxsBytes": 1073741824,
                    "CacheSize": 9000,
                    "MaxTxBytes": 1048576
                },
                "FastSync": {
                    "Version": "v1"
                },
                "Consensus": {
                    "RootDir": "/home/app/.pocket",
                    "WalPath": "data/cs.wal/wal",
                    "TimeoutPropose": 120000000000,
                    "TimeoutProposeDelta": 10000000000,
                    "TimeoutPrevote": 60000000000,
                    "TimeoutPrevoteDelta": 10000000000,
                    "TimeoutPrecommit": 60000000000,
                    "TimeoutPrecommitDelta": 10000000000,
                    "TimeoutCommit": 780000000000,
                    "SkipTimeoutCommit": false,
                    "CreateEmptyBlocks": true,
                    "CreateEmptyBlocksInterval": 900000000000,
                    "PeerGossipSleepDuration": 30000000000,
                    "PeerQueryMaj23SleepDuration": 20000000000
                },
                "TxIndex": {
                    "Indexer": "kv",
                    "IndexKeys": "tx.hash,tx.height,message.sender,transfer.recipient",
                    "IndexAllKeys": false
                },
                "Instrumentation": {
                    "Prometheus": true,
                    "PrometheusListenAddr": ":26660",
                    "MaxOpenConnections": 3,
                    "Namespace": "tendermint"
                }
            },
            "pocket_config": {
                "data_dir": "/home/app/.pocket",
                "genesis_file": "genesis.json",
                "chains_name": "chains.json",
                "session_db_name": "session",
                "evidence_db_name": "pocket_evidence",
                "tendermint_uri": "tcp://localhost:26657",
                "keybase_name": "pocket-keybase",
                "rpc_port": "8081",
                "client_block_sync_allowance": 10,
                "max_evidence_cache_entries": 500,
                "max_session_cache_entries": 500,
                "json_sort_relay_responses": true,
                "remote_cli_url": "http://localhost:8081",
                "user_agent": "",
                "validator_cache_size": 100,
                "application_cache_size": 100,
                "rpc_timeout": 10000,
                "pocket_prometheus_port": "8083",
                "prometheus_max_open_files": 3,
                "max_claim_age_for_proof_retry": 32,
                "proof_prevalidation": false,
                "ctx_cache_size": 20,
                "abci_logging": false,
                "show_relay_errors": true
            }
        }
      chains.json: |
        [
          {
            "id": "0001",
            "url": "XXXXXXX",
            "basic_auth": {
              "username": "XXXXXX",
              "password": "XXXXXX"
            }
          }
        ]
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: data-dir-json
    data:
      priv_val_state.json: "{}"

global:
  serviceAccount:
    name: seed10
  securityContext:
    fsGroup: 1001
    runAsUser: 1005
    runAsGroup: 1001
    fsGroupChangePolicy: "OnRootMismatch"