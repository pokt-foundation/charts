apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "osmosis.fullname" . }}
  labels:
    {{- include "osmosis.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "osmosis.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "osmosis.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "osmosis.selectorLabels" . | nindent 8 }}
        in_rotation: {{ .Values.osmosis.in_rotation | quote }}
        
    spec:
      terminationGracePeriodSeconds: 300
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: {{ .Chart.Name }}-init-node
          image: debian:11-slim
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ['sh', '-c']
          args:
          - /scripts/init-node.sh
          volumeMounts:
            - name: scripts
              mountPath: /scripts/
            - name: configs
              mountPath: /configs/
            - name: datadir
              mountPath: {{ .Values.osmosis.datadir }}

      containers:
      {{if .Values.healthcheckSidecar.enabled }}
        - name: chain-healthcheck-sidecar
          image: {{ .Values.healthcheckSidecar.image.repository }}:{{ .Values.healthcheckSidecar.image.tag }}
          imagePullPolicy: {{ .Values.healthcheckSidecar.image.pullPolicy }}
          ports:
          - containerPort: {{ .Values.healthcheckSidecar.port }}
          env:
          - name: LISTEN_PORT
            value: {{ .Values.healthcheckSidecar.port | quote }}
          - name: INTERVAL_SECONDS
            value: {{ .Values.healthcheckSidecar.checkIntervalSeconds | quote }}
          - name: HEIGHT_DIFF_THRESHOLD
            value: {{ .Values.healthcheckSidecar.heightDiffThreshold | quote }}
          - name: SIDECAR_CHAIN_ID
            value: {{ .Values.osmosis.chainId | quote }}
          - name: LOCAL_RPC_ENDPOINT
            value: "http://localhost:{{ .Values.osmosis.ports.rpc }}"
          - name: REMOTE_RPC_ENDPOINTS
            value: {{ .Values.healthcheckSidecar.remoteRpcEndpoints | quote }}
          - name: HEIGHT_CHECK_STRATEGY
            value: {{ .Values.healthcheckSidecar.heightCheckStrategy | quote }}
          - name: STARTUP_PROBE_STRATEGY
            value: {{ .Values.healthcheckSidecar.startupProbeStrategy | quote }}
          - name: READINESS_PROBE_STRATEGY
            value: {{ .Values.healthcheckSidecar.readinessProbeStrategy | quote }}
          - name: LIVENESS_PROBE_STRATEGY
            value: {{ .Values.healthcheckSidecar.livenessProbeStrategy | quote }}
          - name: EVM_BLOCK_NUMBER_METHOD_NAME
            value: {{ .Values.healthcheckSidecar.evmBlockNumberMethodName | quote }}
          - name: EVM_BLOCK_NUMBER_FIELD_PATH
            value: {{ .Values.healthcheckSidecar.evmBlockNumberFieldPath | quote }}
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: {{ .Values.healthcheckSidecar.port }}
            initialDelaySeconds: 300
            periodSeconds: {{ .Values.healthcheckSidecar.checkIntervalSeconds }}
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: {{ .Values.healthcheckSidecar.port }}
            initialDelaySeconds: 300
            periodSeconds: {{ .Values.healthcheckSidecar.checkIntervalSeconds }}
          startupProbe:
            httpGet:
              path: /health/startup
              port: {{ .Values.healthcheckSidecar.port }}
            initialDelaySeconds: 300
            periodSeconds: 30
            failureThreshold: 20
        {{end}}
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: 
          - start
          livenessProbe:
            tcpSocket:
              port: {{ .Values.osmosis.ports.rpc }}
            initialDelaySeconds: 300
            periodSeconds: 15
          ports:
            - name: rpc
              containerPort: {{ .Values.osmosis.ports.rpc }}
              protocol: TCP
            - name: consensus
              containerPort: {{ .Values.osmosis.ports.consensus }}
              protocol: TCP
              hostPort: {{ .Values.osmosis.ports.consensus }}
          volumeMounts:
            - name: datadir
              mountPath: {{ .Values.osmosis.datadir }}
          resources:
            {{- toYaml .Values.osmosis.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: scripts
          configMap:
            name: {{ include "osmosis.fullname" . }}-scripts
            defaultMode: 0777
        - name: configs
          configMap:
            name: {{ include "osmosis.fullname" . }}-configs
{{- if and .Values.persistence.enabled .Values.persistence.existingClaim  }}
        - name: datadir
          persistentVolumeClaim:
{{- with .Values.persistence.existingClaim }}
            claimName: {{ tpl . $ }}
{{- end }}
{{- else if and .Values.persistence.enabled .Values.persistence.hostPath }}
        - name: datadir
          hostPath:
            path: {{ .Values.persistence.hostPath.path }}
            type: {{ .Values.persistence.hostPath.type }}
{{- else if not .Values.persistence.enabled }}
        - name: datadir
          emptyDir: {}
{{- else if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: datadir
      {{- with .Values.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
            {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        storageClassName: {{ .Values.persistence.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
{{- end }}