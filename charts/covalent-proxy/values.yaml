# Default values for covalent-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: us-central1-docker.pkg.dev/portal-gb-prod/covalent-proxy/covalent-proxy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets:
  []
  # - name: "regcred"
nameOverride: ""
fullnameOverride: ""

# Specifies the envinment variables that are going to be injected in the application
env: {}
  # PORT: 8080
  # DEBUG: false

# Specifies a secret containing the envinment variables that are going to be injected in the application
envFromSecret: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "covalent-proxy"

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

probes:
  enabled: false
  # livenessProbe:
  #   enabled: false
  #   # initialDelaySeconds: 30
  #   # periodSeconds: 10
  #   # timeoutSeconds: 5
  #   # failureThreshold: 6
  #   # successThreshold: 1
  # readinessProbe:
  #   enabled: false
  #   # initialDelaySeconds: 5
  #   # periodSeconds: 10
  #   # timeoutSeconds: 5
  #   # failureThreshold: 6
  #   # successThreshold: 1
  # startupProbe:
  #   enabled: false
  #   # initialDelaySeconds: 5
  #   # periodSeconds: 10
  #   # timeoutSeconds: 5
  #   # failureThreshold: 6
  #   # successThreshold: 1

ingress:
  enabled: false
  # className: ""
  # annotations: {}
  # hosts:
  #   - host: "*.localhost"
  #     paths:
  #       - path: /
  #         pathType: ImplementationSpecific
  # tls:
  #   - secretName: mydomain-com-tls
  #     hosts:
  #       - mydomain.com

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  ## Policies block enables autoscaling behavior based on a set of scale
  ## up/down policies. It expects at least one policy for scale up and
  ## scale down respecitvely. This will allow to fine tune scaling events
  ## and reduce throttling or flapping when scale occurs. Bear in mind
  ## getting this section to work right might require a lot of back
  ## and forth tweaking, trial and error.
  # policies:
  #   enabled: false
  #   behavior:
  #     scaleDown:
  #       stabilizationWindowSeconds: 300
  #       selectPolicy: Min
  #       policies:
  #         - type: Percent
  #           value: 80
  #           periodSeconds: 60
  #     scaleUp:
  #       stabilizationWindowSeconds: 0
  #       selectPolicy: Max
  #       policies:
  #         - type: Percent
  #           value: 80
  #           periodSeconds: 30
  #         - type: Pods
  #           value: 2
  #           periodSeconds: 30
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
