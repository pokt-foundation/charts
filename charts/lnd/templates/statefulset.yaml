apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "lnd.fullname" . }}
  labels:
    {{- include "lnd.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "lnd.fullname" . }}
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "lnd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "lnd.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lnd.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
    {{- if .Values.ingress.enabled }}
        - name: {{ .Chart.Name }}-websockify  
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "efrecon/websockify:latest"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["80 127.0.0.1:{{ .Values.service.p2pPort }}"]
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
    {{- end }}

        {{- if .Values.wallet.autoUnlock }}
        - name: autounlock
          image: appropriate/curl
          command: ["/bin/sh", "-c", "/utils/unlockwallet.sh" ]
          volumeMounts:
            - name: unload-testnet-wallet
              mountPath: /utils
            - name: data
              mountPath: /root
          resources:
            requests:
              cpu: "10m"
          lifecycle:
            preStop:
              exec:
                # Sleep starts as a separate process, so make sure it's killed as well
                command: ["killall", "sleep"]
          {{- end }}


        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["--configfile=/config/lnd.conf"]
          ports:
            - name: rest
              containerPort: {{ .Values.service.restPort }}
              protocol: TCP
            - name: rpc
              containerPort: {{ .Values.service.rpcPort }}
              protocol: TCP
            - name: p2p
              containerPort: {{ .Values.service.p2pPort }}
              protocol: TCP
          lifecycle:
            preStop:
              exec:
                # Make sure we safely quit lnd so we don't corrupt
                # anything
                command: ["/bin/lncli", "-n", "{{ .Values.network }}", "stop"]
            #postStart:
            #  exec:
            #    command: ["/bin/sh","-c","/utils/unlockwallet.sh"]
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: /root
            {{- end }}
            - name: certs
              mountPath: "/var/etcd/certs/"
              readOnly: true
            {{- if .Values.configurationFile }}
            - name: config
              mountPath: /config
            {{- end }}
            {{- if .Values.walletPassword }}
            - name: unlock
              mountPath: /secure/
            {{- end }}

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: certs
          secret:
            secretName: {{ .Values.existingSecretTls }}
            items:
            - key: cert.pem
              path: cert.pem
            - key: key.pem
              path: key.pem
        {{- if .Values.configurationFile }}
        - name: config
          configMap:
            name: {{ include "lnd.fullname" . }}
            items:
            - key: lnd.conf
              path: lnd.conf
        {{- end }}
        {{- if .Values.wallet.autoUnlock | default false }}
        - name: unload-testnet-wallet
          configMap:
            name: {{ .Values.wallet.unlockSecret }}
            defaultMode: 0777
        {{- end }}
        {{- if .Values.walletPassword }}
        - name: unlock
          configMap:
            name: {{ template "lnd.fullname" . }}-unlock
            items:
            - key: password.txt
              path: password.txt
        {{- end }}


    {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: 
        - {{ .Values.persistence.accessMode | quote }}
    {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}

    {{- if .Values.pvcSnapShotName }} 
      dataSource:
        name: "{{ .Values.pvcSnapShotName }}"
        kind: VolumeSnapshot
        apiGroup: snapshot.storage.k8s.io
    {{- end }}

      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}