apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "aptos.fullname" . }}-scripts
data:
  init-node.sh: |
    #!/bin/bash
    cd {{ .Values.aptos.home }}

    if {{ .Values.aptos.forceInitialization }}; then
      echo "aptos.forceInitialization set to true, deleting all node data"
      rm -rf *
      rm -rf .node-initialized
    fi

    if [[ -f ".node-initialized" ]]; then
      echo "Node already initialized"
      exit 0
    fi

    mkdir -p db

    cp /configs/public-full-node.yaml node.yaml

    apt-get update -y
    apt-get install wget -y

    if [[ -f "genesis.blob" ]]; then
      echo "Genesis file already downloaded"
    else
      echo "Downloading genesis.blob"
      wget -O genesis.blob {{ .Values.aptos.genesis.url }}
    fi

    if [[ -f "waypoint.txt" ]]; then
      echo "Waypoint file already downloaded"
    else
      echo "Downloading waypoint.txt"
      wget -O waypoint.txt {{ .Values.aptos.waypoint.url }}
    fi

    if [ "$?" -eq "0" ]
    then
      touch .node-initialized
      echo "Node initiliazed succesfully"
    else
      echo "Failed to initialize node"
    fi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "aptos.fullname" . }}-configs
data:
  public-full-node.yaml: |
    base:
      # This is the location Aptos will store its database. It is backed by a dedicated docker volume
      # for persistence.
      data_dir: "{{ .Values.aptos.home }}/db"
      role: "full_node"
      waypoint:
          # This is a checkpoint into the blockchain for added security.
          from_file: "{{ .Values.aptos.home }}/waypoint.txt"

    state_sync:
      state_sync_driver:
        enable_state_sync_v2: true

    execution:
      # Path to a genesis transaction. Note, this must be paired with a waypoint. If you update your
      # waypoint without a corresponding genesis, the file location should be an empty path.
      genesis_file_location: "{{ .Values.aptos.home }}/genesis.blob"

    full_node_networks:
      - network_id: "public"
        discovery_method: "onchain"
        # The network must have a listen address to specify protocols. This runs it locally to
        # prevent remote, incoming connections.
        listen_address: "/ip4/127.0.0.1/tcp/6180"
        # Define the upstream peers to connect to
        seeds:
          {}

    api:
      # This specifies your REST API endpoint. Intentionally on public so that Docker can export it.
      address: 0.0.0.0:8080