apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "avalanche.fullname" . }}
  labels:
    {{- include "avalanche.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "avalanche.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "avalanche.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "avalanche.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "avalanche.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /avalanchego/build/avalanchego
          args:
            - --http-host={{ .Values.avalanche.httpHost }}
            {{- if .Values.avalanche.networkID }}
            - --network-id={{ .Values.avalanche.networkID }}
            {{- end }}
            {{- if .Values.avalanche.logLevel }}
            - --log-level={{ .Values.avalanche.logLevel }}
            {{- end }}
            # Extra/un-managed arguments
            {{- range .Values.avalanche.extraArgs }}
            {{- if .name }}
            - {{ printf "--%s" .name }}
            {{- end }}
            {{- if .value }}
            - "{{ .value }}"
            {{- end }}
            {{- end }}
          ports:
            - name: staking
              containerPort: 9651
              protocol: TCP
            - name: http
              containerPort: 9650
              protocol: TCP
          startupProbe:
            httpGet:
              port: http
              path: /ext/health/liveness
            failureThreshold: 1950 # restart after 65 hours
            initialDelaySeconds: 10
            periodSeconds: 120
          livenessProbe:
            httpGet:
              port: http
              path: /ext/health/liveness
            failureThreshold: 4 # restart after 2 minutes
            periodSeconds: 30
          readinessProbe:
            httpGet:
              port: http
              path: /ext/health/readiness
            failureThreshold: 1950 # restart after 65 hours
            initialDelaySeconds: 10
            periodSeconds: 120
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /root/.avalanchego
              name: avalanchego
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: avalanchego
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: {{ .Values.storageSize }}
        {{- if .Values.storageClassName }}
        storageClassName: {{ .Values.storageClassName }}
        {{- end }}
