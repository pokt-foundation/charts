apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "avax_subnets.fullname" . }}
  labels:
    {{- include "avax_subnets.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "avax_subnets.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "avax_subnets.fullname" . }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "avax_subnets.selectorLabels" . | nindent 8 }}

  
    spec:
      terminationGracePeriodSeconds: 120
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      # initContainers:
      # - name: init-or-bootstrap
      #   image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
      #   imagePullPolicy: {{ .Values.image.pullPolicy }}
      #   command: ['/bin/bash', '-c', '{{ .Values.scripts_volume_mount }}/init.sh']
      #   volumeMounts:
      #     - name: avax-subnets-datadir
      #       mountPath: /root/.avalanchego
      #     - name: scripts
      #       mountPath: {{ .Values.scripts_volume_mount }}
      #     - mountPath: {{ .Values.config_volume_mount }}
      #       name: configs-dir

      containers:
{{if .Values.healthcheckSidecar.enabled }}
      - name: chain-healthcheck-sidecar
        image: {{ .Values.healthcheckSidecar.image.repository }}:{{ .Values.healthcheckSidecar.image.tag }}
        imagePullPolicy: {{ .Values.healthcheckSidecar.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.healthcheckSidecar.port }}
        env:
        - name: LISTEN_PORT
          value: {{ .Values.healthcheckSidecar.port | quote }}
        - name: INTERVAL_SECONDS
          value: {{ .Values.healthcheckSidecar.checkIntervalSeconds | quote }}
        - name: HEIGHT_DIFF_THRESHOLD
          value: {{ .Values.healthcheckSidecar.heightDiffThreshold | quote }}
        - name: SIDECAR_CHAIN_ID
          value: "0003" # Avax
        - name: STALE_HEIGHT_CHECK_HISTORY_LENGTH
          value: {{ .Values.healthcheckSidecar.staleHeightCheckHistoryLength | quote }}
        - name: HEIGHT_CHECK_STRATEGY
          value: {{ .Values.healthcheckSidecar.strategies.heightCheck | quote }}
        - name: STARTUP_PROBE_STRATEGY
          value: {{ .Values.healthcheckSidecar.strategies.startup | quote }}
        - name: READINESS_PROBE_STRATEGY
          value: {{ .Values.healthcheckSidecar.strategies.readiness | quote }}
        - name: LIVENESS_PROBE_STRATEGY
          value: {{ .Values.healthcheckSidecar.strategies.liveness | quote }}
        - name: LOCAL_RPC_ENDPOINT
          value: "http://localhost:{{ .Values.ports.http }}/ext/bc/C/rpc"
        - name: REMOTE_RPC_ENDPOINTS
          value: {{ join "," .Values.healthcheckSidecar.remoteRpcEndpoints | quote }}
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: {{ .Values.healthcheckSidecar.port }}
          periodSeconds: {{ .Values.healthcheckSidecar.checkIntervalSeconds }}
        # livenessProbe:
        #   httpGet:
        #     path: /health/liveness
        #     port: {{ .Values.healthcheckSidecar.port }}
        #   periodSeconds: {{ .Values.healthcheckSidecar.checkIntervalSeconds }}
        # startupProbe:
        #   httpGet:
        #     path: /health/startup
        #     port: {{ .Values.healthcheckSidecar.port }}
        #   periodSeconds: 30
        #   failureThreshold: 20
        resources:
          {{- toYaml .Values.healthcheckSidecar.resources | nindent 12 }}
{{end}}
      - name: avax-subnets
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ['/avalanchego/build/avalanchego']
        args:
        - --config-file={{ .Values.config_volume_mount }}/config.json
{{- if (not (eq "-" .Values.validatorIP)) }}
        - --public-ip=$(HOST_IP)
{{- end }}
{{- if (not (eq "-" .Values.publicIpResolutionService)) }}
        - --public-ip-resolution-service={{ .Values.publicIpResolutionService }}
{{- end }}
        - --http-host=0.0.0.0
        - --staking-port={{ .Values.ports.consensus }}
        env:
{{- if (eq "hostIP"  .Values.validatorIP) }}
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
{{- else if (not (eq "-" .Values.validatorIP)) }}
        - name: HOST_IP
          value: {{ .Values.validatorIP }}
{{- end }}
        ports:
          - name: http
            containerPort: {{ .Values.ports.http }}
            protocol: TCP
          - name: consensus
            containerPort: {{ .Values.ports.consensus }}
            protocol: TCP
            hostPort: {{ .Values.ports.consensus }}
        volumeMounts:
          - mountPath: {{ .Values.config_volume_mount }}
            name: configs-dir
          - name: avax-subnets-datadir
            mountPath: /root/.avalanchego
{{- if .Values.staking.enabled }}
          - name: staking-keys
            mountPath: /root/.avalanchego/staking/staker.crt
            subPath: staker.crt
          - name: staking-keys
            mountPath: /root/.avalanchego/staking/staker.key
            subPath: staker.key
{{- end }}
{{if .Values.healthcheckSidecar.enabled }}
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: {{ .Values.healthcheckSidecar.port }}
          periodSeconds: {{ .Values.healthcheckSidecar.checkIntervalSeconds }}
        # Using avax probe for liveness (rpc responds with 503 when the node is not synced)
        livenessProbe:
          httpGet:
            path: /ext/health/liveness
            port: {{ .Values.ports.http }}
          periodSeconds: {{ .Values.healthcheckSidecar.checkIntervalSeconds }}
        # Using avax probe for startup (rpc responds with 503 when the node is not synced)
        startupProbe:
          httpGet:
            path: /ext/health/liveness
            port: {{ .Values.ports.http }}
          periodSeconds: 30
          failureThreshold: 20
{{end}}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: configs-dir
          emptyDir: {}
        - name: scripts
          configMap:
            name: {{ include "avax_subnets.fullname" . }}-scripts
            defaultMode: 0777
{{- if .Values.staking.enabled }}
        - name: staking-keys
          secret:
            secretName: {{ .Values.staking.secretName }}
{{- end }}
{{- if not .Values.persistence.enabled }}
        - name: avax-subnets-datadir
          emptyDir: {}
{{- else if and .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: avax-subnets-datadir
        {{- with .Values.persistence.annotations }}
        annotations:
        {{- toYaml . | nindent 8 }}
        {{- end }}
      spec:
        accessModes: 
          - {{ .Values.persistence.accessMode | quote }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- with .Values.persistence.dataSource }}
        dataSource:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- end }}
{{- end }}
