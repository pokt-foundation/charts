apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "bitcoind.fullname" . }}
  labels:
    {{- include "bitcoind.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
spec:
  serviceName: {{ include "bitcoind.fullname" . }}
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "bitcoind.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: controller
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "bitcoind.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: controller
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bitcoind.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
    {{- if .Values.metrics.enabled }}
        - name: {{ .Chart.Name }}-exporter
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: rpcuser
              value: "rpcuser"
            - name: rpcpassword
              value: "rpcpassword"
            - name: rpcport
              value: {{ .Values.service.rpcPort | quote }}
          ports:
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
    {{- end }}
    {{- if .Values.ingress.enabled }}
        - name: {{ .Chart.Name }}-websockify  
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "efrecon/websockify:latest"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["80 127.0.0.1:{{ .Values.service.p2pPort }}"]
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
    {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: BITCOIN_DATA
              value: {{ .Values.bitcoinData | quote }}
          args: ["-conf=/config/bitcoin.conf"]
          ports:
            - name: rpc
              containerPort: {{ .Values.service.rpcPort }}
              protocol: TCP
            - name: p2p
              containerPort: {{ .Values.service.p2pPort }}
              protocol: TCP
            {{- if .Values.service.zmqPortBlk }}
            - name: zmq-blocks
              containerPort: {{ .Values.service.zmqPortBlk }}
              protocol: TCP
            {{- end }}
            {{- if .Values.service.zmqPortTx }}
            - name: zmq-txs
              containerPort: {{ .Values.service.zmqPortTx }}
              protocol: TCP
            {{- end }}
          lifecycle:
            preStop:
              exec:
                # Make sure we safely quit bitcoind so we don't corrupt anything
                command: ["bitcoin-cli -conf=/config/bitcoin.conf stop && sleep 45"]

          resources:
            {{- toYaml .Values.resources | indent 12 }}
          #livenessProbe:
          #  tcpSocket:
          #    port: {{ .Values.service.p2pPort }}
          #  initialDelaySeconds: 120
          #  periodSeconds: 30
          #readinessProbe:
          #  exec:
          #    command:
          #    - bitcoin-cli 
          #    - "-conf=/config/bitcoin.conf"
          #    - ping
          #  initialDelaySeconds: 120
          #  periodSeconds: 30
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.bitcoinData | quote }}
            {{- if .Values.configurationFile }}
            - name: config
              mountPath: /config
            {{- end }}
      volumes:
        {{- if .Values.configurationFile }}
        - name: config
          configMap:
            name: {{ include "bitcoind.fullname" . }}
            items:
            - key: bitcoin.conf
              path: bitcoin.conf
        {{- end }}

    {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
      {{- with .Values.persistence.annotations }}
      annotations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      accessModes: 
        - {{ .Values.persistence.accessMode | quote }}
    {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}

    {{- if .Values.pvcSnapShotName }} 
      dataSource:
        name: "{{ .Values.pvcSnapShotName }}"
        kind: VolumeSnapshot
        apiGroup: snapshot.storage.k8s.io
    {{- end }}

      {{- end }}
    {{- end }}
